networks:
  sdrserver:
    driver: bridge
  cloudflaretunnel:
    driver: bridge

services:
  #
  # Traefik
  sdrserver-traefik:
    networks:
      - sdrserver
      - cloudflaretunnel
  #
  # OpenWebRX
  sdrserver-openwebrx:
    networks:
      - sdrserver
      - cloudflaretunnel
    labels:
      - traefik.enable=true
      # Default
      - traefik.http.services.sdrserver-openwebrx.loadbalancer.server.port=8073
      - traefik.http.routers.sdrserver-openwebrx.service=sdrserver-openwebrx
      - traefik.http.routers.sdrserver-openwebrx.entrypoints=web
      - traefik.http.routers.sdrserver-openwebrx.rule=Host(`openwebrx-sdr.andrelom.com`)
  #
  # Glances
  sdrserver-glances:
    networks:
      - sdrserver
      - cloudflaretunnel
    labels:
      - traefik.enable=true
      # Default
      - traefik.http.services.sdrserver-glances.loadbalancer.server.port=61208
      - traefik.http.routers.sdrserver-glances.service=sdrserver-glances
      - traefik.http.routers.sdrserver-glances.entrypoints=web
      - traefik.http.routers.sdrserver-glances.rule=Host(`glances-sdr.andrelom.com`)
  #
  # Cloudflared Tunnel
  sdrserver-cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: sdrserver-cloudflared
    restart: unless-stopped
    networks:
      - cloudflaretunnel
    command: tunnel run --url http://sdrserver-traefik
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    depends_on:
      sdrserver-traefik:
        condition: service_started
